{"version":3,"sources":["context/items-context.js","Helper.js","components/Form.js","components/AllTasks.js","components/ComplitedTask.js","components/PendingTasks.js","components/TaskCategary.js","reducer/items.js","App.js","reportWebVitals.js","index.js"],"names":["ItemsContext","createContext","itemsArray","itemsDispatch","currentDate","d","Date","hours","getHours","minutes","getMinutes","ampm","getMonth","getDate","getFullYear","userAction","obj","id","objId","userTitle","userDescription","userMessage","confirmAlert","title","message","buttons","label","onClick","i","length","category","NotificationManager","success","Form","useState","note","setNote","useContext","items","className","onKeyUp","e","target","value","rows","placeholder","type","preventDefault","newItem","item","document","getElementById","reset","error","AllTasks","currentPage","setCurrentPage","fetchPage","st","Math","ceil","indexOfLastTodo","indexOfFirstTodo","slice","map","alert","icon","faCheckCircle","date","faTrash","allTasks","pageNumbers","pageSize","push","renderPageNumbers","number","liClassName","href","displayPageNumber","ComplitedTask","result","filter","data-id","faUndoAlt","completedTasks","PendingTasks","pendingTasks","TaskCategary","exact","activeClassName","to","path","component","itemsReducer","state","action","itemToBeDeleted","App","useReducer","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f71a9d0c.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst ItemsContext = createContext({\r\n  itemsArray: [],\r\n  itemsDispatch: () => {},\r\n});\r\n\r\nexport { ItemsContext as default };\r\n","import { NotificationManager } from 'react-notifications';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \r\n\r\nexport const currentDate = () => {\r\n    var d = new Date();\r\n    var months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n    var hours = d.getHours();\r\n    var minutes = d.getMinutes();\r\n    var ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; \r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    return months[d.getMonth()]+' '+ d.getDate()+' '+d.getFullYear()+' | '+ hours + ':' + minutes + ' ' + ampm;\r\n}\r\n\r\n\r\nexport const userAction = (obj,id,objId,userTitle,userDescription,userMessage) =>{\r\n    confirmAlert({\r\n        title: userTitle,\r\n        message: userDescription,\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n                for (var i = 0; i < obj.length; i++){\r\n                    if (obj[i].id === id){\r\n                        obj[i].category=objId;\r\n                    }\r\n                }\r\n                // setData(oldData);\r\n                // oldData.sort((a, b) => parseInt(b.id) - parseInt(a.id));\r\n                // localStorage.setItem('items', JSON.stringify(oldData));\r\n                NotificationManager.success(userMessage);\r\n            }\r\n          },\r\n          {\r\n            label: 'No'\r\n          }\r\n        ]\r\n      }); \r\n}\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nimport ItemsContext from '../context/items-context';\r\nimport { currentDate } from '../Helper';\r\n\r\n\r\nconst Form = () => {\r\n    const [note,setNote] = useState('');\r\n    const {itemsDispatch, items } = useContext(ItemsContext);\r\n    \r\n\r\n    const setLocalStorage = (e) => {\r\n        if(note !==''){\r\n            e.preventDefault();\r\n                var newItem = { 'id': items.length+1, 'note': note, 'date': currentDate(), 'category': 0};\r\n                itemsDispatch({ type: 'ADD_ITEM', item:newItem });\r\n                // var oldItems = localStorage.getItem(\"itemsArray\") ? JSON.parse(localStorage.getItem('itemsArray')) : [];\r\n                // oldItems.unshift(newItem);\r\n                // localStorage.setItem('itemsArray', JSON.stringify(oldItems));\r\n                setNote('');\r\n                document.getElementById(\"createnote\").reset();\r\n                NotificationManager.success('Item added successfully');\r\n        } else {\r\n            NotificationManager.error('Please enter input note first');\r\n        }\r\n    }\r\n\r\n    return (\r\n           <form id=\"createnote\" className=\"row g-3 needs-validation\">\r\n                <h3>Create New Task</h3>\r\n                <textarea className=\"form-control\" onKeyUp={(e)=> setNote(e.target.value)} rows=\"3\"  placeholder=\"Enter note here…\" />\r\n                <button type=\"button\" onClick={ setLocalStorage } id=\"note\" className=\"btn bg-danger text-white\">Submit</button>\r\n           </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React, { useState, useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport ItemsContext from '../context/items-context';\r\n\r\nimport { userAction  } from '../Helper';\r\n\r\nconst AllTasks = () => {\r\n\r\n    const { items } = useContext(ItemsContext);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const todosPerPage = 5;\r\n\r\n\r\n    // const markDeleted = (id) => {\r\n    //     confirmAlert({\r\n    //         title: 'Confirm to Delete',\r\n    //         message: 'Are you sure to do this.',\r\n    //         buttons: [\r\n    //           {\r\n    //             label: 'Yes',\r\n    //             onClick: () => {\r\n    //                 // for (var i = 0; i < oldData.length; i++){\r\n    //                 //     if (oldData[i].id === id){\r\n    //                 //         oldData[i].category=2;\r\n    //                 //     }\r\n    //                 // }\r\n    //                 // setData(oldData);\r\n\t// \t\t\t\t// oldData.sort((a, b) => parseInt(b.id) - parseInt(a.id));\r\n    //                 // localStorage.setItem('items', JSON.stringify(oldData));\r\n    //                 // NotificationManager.success('Item marked deleted');\r\n    //             }\r\n    //           },\r\n    //           {\r\n    //             label: 'No',\r\n    //             onClick: () => alert('Click No')\r\n    //           }\r\n    //         ]\r\n    //       }); \r\n    // }\r\n\t\r\n    const allTasks = ()=> {\r\n\t\tconst indexOfLastTodo \t= currentPage * todosPerPage;\r\n\t\tconst indexOfFirstTodo \t= indexOfLastTodo - todosPerPage;\r\n        const currentTodos \t\t= items.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\t\t\r\n        const outputData = currentTodos.map( d => {\r\n            if(d.category ===2) {\r\n                return (<div className=\"shadow-sm p-3 mb-5 bg-white deleted rounded box \" key={d.id}>\r\n                <div><FontAwesomeIcon className=\"text-danger cursor-ponter\" onClick={()=>{ alert('hello') }}   icon={ faCheckCircle } /></div>\r\n                <div><strong>{ d.note }</strong><p><small>{d.date}</small></p></div>\r\n            </div>)\r\n            } else if(d.category ===1){\r\n                return (<div className=\"shadow-sm p-3 mb-5 bg-primary rounded box \" key={d.id}>\r\n                <div><FontAwesomeIcon className=\"text-info\" onClick={()=>{ alert('hello') }}  icon={ faCheckCircle  } /></div>\r\n                <div><strong>{ d.note }</strong><p><small>{d.date}</small></p></div>\r\n                <div><FontAwesomeIcon className=\"text-danger cursor-ponter\" onClick={(e) => userAction(items,d.id,2,'Confirm to Delete','Are you sure to do this.','Item marked deleted') } icon={ faTrash } /></div>\r\n            </div>)\r\n            } else {\r\n                return (<div className=\"shadow-sm p-3 mb-5 bg-white rounded box \" key={d.id}>\r\n                <div><FontAwesomeIcon className=\"text-info cursor-ponter\" onClick={(e) => userAction(items,d.id,1,'Confirm to Complite','Are you sure to do this.','Item going to complite') }  icon={ faCheckCircle } /></div>\r\n                <div><strong>{ d.note }</strong><p><small>{d.date}</small></p></div>\r\n            </div>)\r\n            }\r\n        });\r\n\t\t\r\n        return outputData;\r\n    }\r\n\t\r\n\tconst fetchPage = (st) =>{\r\n\t\t(st==='next') ?\r\n\t\t\t(currentPage === Math.ceil(items.length /todosPerPage)) ? setCurrentPage(currentPage) : setCurrentPage(currentPage+1)\r\n\t\t:\r\n\t\t\t(currentPage !==1 ) ? setCurrentPage(currentPage-1) : setCurrentPage(currentPage);\r\n\t}\r\n\t\r\n\tconst displayPageNumber = () => {\r\n\t\tconst pageNumbers = [];\r\n\t\tconst pageSize = Math.ceil(items.length /todosPerPage);\r\n        for (let i = 1; i <= pageSize; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n\t\tconst renderPageNumbers = pageNumbers.map(number => {\r\n\t\t  let liClassName = (currentPage===number) ? \"page-item active\" : \"page-item\";\r\n          return (<li className={liClassName} key={number} ><a href=\"!#\" className=\"page-link\" onClick={() => setCurrentPage(number) } > {number} </a></li>);\r\n        });\r\n\t\treturn(<nav><ul className=\"pagination\"><li className=\"page-item\"><a href=\"!#\" onClick={()=> fetchPage('previous')} className=\"page-link\" >&laquo;</a></li>{renderPageNumbers}<li className=\"page-item\"><a href=\"!#\" className=\"page-link\" onClick={()=> fetchPage('next')} >&raquo;</a></li></ul></nav>);\r\n\t}\r\n\r\n    return (\r\n\t<div className=\"row\">\r\n        <div className=\"bg-light\">\r\n        <h5>ALL Task</h5>\r\n        { allTasks() } \r\n\t\t</div>\r\n\t\t{ displayPageNumber() } \r\n\t</div>);\r\n};\r\n\r\nexport default AllTasks;","import React , { useState, useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTrash, faUndoAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport ItemsContext from '../context/items-context';\r\nimport { userAction } from './../Helper';\r\n\r\nconst ComplitedTask = () => {\r\n    const { items } = useContext(ItemsContext);\r\n    const result = items.filter(item => item.category === 1);\r\n\tconst [currentPage,setCurrentPage] = useState(1);\r\n\tconst todosPerPage = 5;\r\n\r\n\r\n    const completedTasks = () => {\r\n\t\tconst indexOfLastTodo \t= currentPage * todosPerPage;\r\n\t\tconst indexOfFirstTodo \t= indexOfLastTodo - todosPerPage;\r\n       \r\n        const currentTodos \t\t= result.slice(indexOfFirstTodo, indexOfLastTodo);\r\n        const outputData = currentTodos.map( d => {\r\n            return (<div className=\"shadow-sm p-3 mb-5 bg-primary rounded box \" key={d.id}>\r\n            <div><FontAwesomeIcon className=\"text-info\" onClick={()=>{ alert('hello') }}  data-id={d.id} icon={ faCheckCircle  } /></div>\r\n            <div><strong>{ d.note }</strong><p><small>{d.date}</small></p></div>\r\n            <div>\r\n                <FontAwesomeIcon className=\"text-danger cursor-ponter\" onClick={(e) => userAction(result,d.id,2,'Confirm to Delete','Are you sure to do this.','Item marked deleted') } icon={ faTrash } />\r\n                <FontAwesomeIcon className=\"text-info cursor-ponter\" onClick={(e) => userAction(result,d.id,0,'Confirm to Pending','Are you sure to do this.','Item go back to review') } icon={ faUndoAlt } />\r\n            </div>\r\n        </div>)\r\n        });\r\n        return outputData;\r\n    }\r\n\t\r\n\tconst fetchPage = (st) =>{\r\n\t\t(st==='next') ?\r\n\t\t\t(currentPage === Math.ceil(result.length /todosPerPage)) ? setCurrentPage(currentPage) : setCurrentPage(currentPage+1)\r\n\t\t:\r\n\t\t\t(currentPage !==1 ) ? setCurrentPage(currentPage-1) : setCurrentPage(currentPage);\r\n\t}\r\n\t\r\n\tconst displayPageNumber =()=> {\r\n\t\tconst pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(result.length /todosPerPage); i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n\t\tconst renderPageNumbers = pageNumbers.map(number => {\r\n\t\t  let liClassName = (currentPage===number) ? \"page-item active\" : \"page-item\";\r\n          return (<li className={liClassName} key={number} ><a href=\"!#\" className=\"page-link\" onClick={() => setCurrentPage(number) } > {number} </a></li>);\r\n        });\r\n\t\t\r\n\t\treturn(<nav><ul className=\"pagination\"><li className=\"page-item\"><a href=\"!#\" onClick={()=> fetchPage('previous')} className=\"page-link\" >&laquo;</a></li>{renderPageNumbers}<li className=\"page-item\"><a href=\"!#\" className=\"page-link\" onClick={()=> fetchPage('next')} >&raquo;</a></li></ul></nav>);\r\n\t}\r\n\r\n    return (\r\n        <div className=\"row\"><div className=\"bg-light\">\r\n        <h5>Complited Task</h5>\r\n        { completedTasks() }\r\n        </div>{ displayPageNumber() } </div>\r\n    );\r\n};\r\n\r\nexport default ComplitedTask;","import React , { useState, useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport ItemsContext from '../context/items-context';\r\nimport { userAction } from './../Helper';\r\n\r\nconst PendingTasks = () => {\r\n\r\n    const { items } = useContext(ItemsContext);\r\n    const result = items.filter(item => item.category === 0);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const todosPerPage = 5;\r\n\r\n\r\n    const pendingTasks = ()=> {\r\n\t\tconst indexOfLastTodo \t= currentPage * todosPerPage;\r\n\t\tconst indexOfFirstTodo \t= indexOfLastTodo - todosPerPage;\r\n        const currentTodos \t\t= result.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\t\t\r\n        const outputData = currentTodos.map( d => {\r\n            return (\r\n                <div className=\"shadow-sm p-3 mb-5 bg-white rounded box\" key={d.id}>\r\n                    <div></div>\r\n                    <div>\r\n                        <strong>{ d.note }</strong>\r\n                        <p><small>{d.date}</small></p>\r\n                    </div>\r\n                    <div>\r\n                        <FontAwesomeIcon className=\"text-primary cursor-ponter\" onClick={(e) => userAction(result,d.id,1,'Confirm to Complite','Are you sure to do this.','Item going to complite') } icon={faCheckCircle} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n        return outputData;\r\n    }\r\n\t\r\n\tconst fetchPage = (st) =>{\r\n\t\t(st==='next') ? (currentPage === Math.ceil(result.length /todosPerPage)) ? setCurrentPage(currentPage) : setCurrentPage(currentPage+1) :  (currentPage !==1 ) ? setCurrentPage(currentPage-1) : setCurrentPage(currentPage);\r\n\t}\r\n\t\r\n\tconst displayPageNumber =()=> {\r\n\t\tconst pageNumbers = [];\r\n\t\tconst pageSize = Math.ceil(result.length /todosPerPage);\r\n        for (let i = 1; i <= pageSize; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n\t\tconst renderPageNumbers = pageNumbers.map(number => {\r\n\t\t  let liClassName = (currentPage===number) ? \"page-item active\" : \"page-item\";\r\n          return (<li className={liClassName} key={number} ><a href=\"!#\" className=\"page-link\" onClick={() => setCurrentPage(number) } > {number} </a></li>);\r\n        });\r\n\t\t\r\n\t\treturn(<nav><ul className=\"pagination\"><li className=\"page-item\"><a href=\"!#\" onClick={()=> fetchPage('previous')} className=\"page-link\" >&laquo;</a></li>{renderPageNumbers}<li className=\"page-item\"><a href=\"!#\" className=\"page-link\" onClick={()=> fetchPage('next')} >&raquo;</a></li></ul></nav>);\r\n\t}\r\n    return (\r\n        <div className=\"row\"><div className=\"bg-light\">\r\n        <p>PENDING</p>\r\n        { pendingTasks() }\r\n        </div>{ displayPageNumber() } </div>\r\n    );\r\n};\r\n\r\nexport default PendingTasks;","import React from 'react';\r\nimport {BrowserRouter as Router,Switch,Route, NavLink} from \"react-router-dom\";\r\n\r\nimport AllTasks from './AllTasks';\r\nimport ComplitedTask from './ComplitedTask';\r\nimport PendingTasks from './PendingTasks';\r\n\r\nconst TaskCategary = () => {\r\n    return (\r\n        <Router>\r\n        <div className=\"row\">\r\n        <div className=\"col-4\">\r\n            <ul className=\"nav flex-column\">\r\n                <li className=\"nav-item btn\"><NavLink exact activeClassName=\"btn-light\" to=\"/\">ALL TASKS</NavLink></li>\r\n                <li className=\"nav-item btn\"><NavLink exact activeClassName=\"btn-light\" to=\"/complited\">COMPLETED</NavLink></li>\r\n                <li className=\"nav-item btn\"><NavLink exact activeClassName=\"btn-light\" to=\"/pending\">PENDING</NavLink></li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-8\">\r\n          <Switch>\r\n            <Route path=\"/pending\" component={ PendingTasks } />\r\n            <Route path=\"/complited\" component={ComplitedTask} />\r\n            <Route path=\"/\" component={AllTasks } />\r\n          </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n};\r\n\r\nexport default TaskCategary;","const itemsReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'POPULATE_ITEMS':\r\n      return action.items;\r\n    case 'ADD_ITEM':\r\n      return [...state, action.item];\r\n    case 'REMOVE_ITEM':\r\n      return state.filter((item) => item !== action.itemToBeDeleted);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport {itemsReducer as default };","import React, { useEffect, useReducer } from 'react';\nimport './App.css';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer} from 'react-notifications';\n\nimport Form from './components/Form';\nimport TaskCategary from './components/TaskCategary';\n\nimport itemsReducer from './reducer/items';\nimport ItemsContext from './context/items-context';\n\n\nfunction App() {\n const [items, itemsDispatch] = useReducer(itemsReducer, []);\n \n useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items'));\n    if (items) {\n      itemsDispatch({ type: 'POPULATE_ITEMS', items });\n    }\n  }, []);\n \n  useEffect(() => {\n    localStorage.setItem('items', JSON.stringify(items));\n  }, [items]);\n \n  return (\n  <ItemsContext.Provider value={{ items, itemsDispatch }}>\n\t\t<div className=\"container\">\n\t\t  <div className=\"row bg-primary top align-middle text-white\">\n\t\t\t<div className=\"col-3\"><strong>TASK MANAGEMENT APP</strong></div>\n\t\t\t<div className=\"col-9\"></div>\n\t\t  </div>\n\t\t  <div className=\"row\">\n\t\t\t<div className=\"col-9\"><TaskCategary /></div>\n\t\t\t<div className=\"col-3\"><Form /></div>\n\t\t  </div>\n\t\t  <NotificationContainer />\n\t\t</div>\n\t</ItemsContext.Provider>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}